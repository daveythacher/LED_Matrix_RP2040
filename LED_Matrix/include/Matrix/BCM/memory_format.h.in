/* 
 * File:   memory_format.h
 * Author: David Thacher
 * License: GPL 3.0
 */
 
#ifndef MEMORY_FORMAT_H
#define MEMORY_FORMAT_H

#include <math.h>
#include "Matrix/config.h"

namespace Matrix {
    // -- DO NOT EDIT BELOW THIS LINE --

    #cmakedefine DEFINE_MAX_RGB_LED_STEPS   @DEFINE_MAX_RGB_LED_STEPS@
    #cmakedefine DEFINE_MAX_REFRESH         @DEFINE_MAX_REFRESH@
    #cmakedefine DEFINE_SERIAL_CLOCK        @DEFINE_SERIAL_CLOCK@
    #cmakedefine DEFINE_BLANK_TIME          @DEFINE_BLANK_TIME@
    #cmakedefine DEFINE_FPS                 @DEFINE_FPS@
    #cmakedefine DEFINE_BYPASS_FANOUT       @DEFINE_BYPASS_FANOUT@

    #ifndef DEFINE_BYPASS_FANOUT
    #define DEFINE_BYPASS_FANOUT            false
    #endif
    
    constexpr int MAX_RGB_LED_STEPS = DEFINE_MAX_RGB_LED_STEPS;       // Contrast Ratio - Min RGB constant forward current (Blue LED in my case) in uA divided by min light current in uA
    constexpr int MAX_REFRESH = DEFINE_MAX_REFRESH;
    constexpr float SERIAL_CLOCK = (DEFINE_SERIAL_CLOCK * 1000000.0);
    constexpr int BLANK_TIME = DEFINE_BLANK_TIME;
    constexpr int FPS = DEFINE_FPS;
    constexpr bool BYPASS_FANOUT = DEFINE_BYPASS_FANOUT;
    
    constexpr int PWM_bits = round(log2((double) MAX_RGB_LED_STEPS / MULTIPLEX));
    
    typedef volatile uint8_t test2[MULTIPLEX][PWM_bits][COLUMNS + 1];
}

#endif

