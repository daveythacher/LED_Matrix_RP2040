/* 
 * File:   config.h
 * Author: David Thacher
 * License: GPL 3.0
 */
 
#ifndef SERIAL_CONFIG_H
#define SERIAL_CONFIG_H    

#include <stdint.h>
#include "Matrix/config.h"
#include "Serial/types.h"
    
namespace Serial {
    // -- DO NOT EDIT BELOW THIS LINE --

    #cmakedefine DEFINE_SERIAL_RGB_TYPE     @DEFINE_SERIAL_RGB_TYPE@
    #cmakedefine DEFINE_SERIAL_ALGORITHM    @DEFINE_SERIAL_ALGORITHM@
    #cmakedefine DEFINE_IS_LOAFER           @DEFINE_IS_LOAFER@

    #ifndef DEFINE_IS_LOAFER
    #define DEFINE_IS_LOAFER            false
    #endif

    typedef volatile DEFINE_SERIAL_RGB_TYPE test[2 * Matrix::MULTIPLEX][Matrix::COLUMNS];
    
    union packet {
        test data;
        volatile uint32_t mem[((sizeof(test) / 64) + 1) * (64 / sizeof(uint32_t))];
    };

    const uint32_t range_high = DEFINE_SERIAL_RGB_TYPE::range_high;
    constexpr uint8_t num_framebuffers = internal::DEFINE_SERIAL_ALGORITHM::num_framebuffers;
    constexpr uint32_t max_framebuffer_size = internal::DEFINE_SERIAL_ALGORITHM::max_framebuffer_size;
    constexpr uint32_t payload_size = internal::DEFINE_SERIAL_ALGORITHM::payload_size;
    constexpr uint8_t num_packets = internal::DEFINE_SERIAL_ALGORITHM::num_packets;
    constexpr bool isPacket = DEFINE_IS_LOAFER;
}

#endif

